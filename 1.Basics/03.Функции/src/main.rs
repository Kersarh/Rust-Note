// Ключевое слово fn объявляет функцию,
// далее следует имя функции,
// круглые скобки () в которых перечисляются аргументы функции.
// Затем тело функции, заключённое в фигурные скобки {}.
fn main() {
    show_num(5); // вызов функции show_num определенной ниже

    let i = add_one(5); // Возврат значения из функции в переменную.
    println!("i = {}", i); // 6

    // Указатели на функции
    // Можно объявить имя, связанное с функцией:
    // let f: fn(i32) -> i32 = add_one;
    let f = add_one;

    // fatalerr();
}

// Функция печатающая число
fn show_num(x: i32) {
    println!("x = {}", x);
}

// Функции могут возвращать значения.
// Возвращаемые значения не именуются, но указывается их тип после символа (->).
// В Rust, возвращаемое значение функции является синонимом значения последнего выражения в блоке тела функции.
// Можно выполнить возврат из функции используя ключевое слово return и указав значение,
// но большинство функций явно возвращает последнее выражение в теле.
fn add_one(x: i32) -> i32 {
    // return x; // досрочный выход из функции
    x + 1 // или без ; в конце строки
}

// Расходящиеся функции
// Для функций, которые не возвращают управление («расходящихся»), в Rust есть специальный синтаксис:
// fn fatalerr() -> ! {
//     // panic!("Fatal error!!!");
// }


